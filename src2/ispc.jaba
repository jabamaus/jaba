# Autogenerated file

type :ispc_rule do

  title 'Intel SPMD Program Compiler (ISPC)'

  attr :msbuild_dir, type: :dir do
    title 'Location of msbuild customisation files'
    basedir_spec :definition_root
    flags :required # TODO: if target_host.visual_studio?
    on_set do |dir|
      vc_extension_settings '.ispc', "#{dir}/ispc.props"
      vc_extension_targets '.ispc', "#{dir}/ispc.targets"
    end
  end

  attr :AddInstrumentation, type: :bool do
    title 'Enable Instrumentation Injection'
    note 'Emit instrumentation to gather performance data. Sets --instrument'
    on_set do |val|
      vcprop 'ISPC|AddInstrumentation', val
    end
  end

  attr :AdditionalOptions, type: :string do
    title 'Additional Options'
    on_set do |val|
      vcprop 'ISPC|AdditionalOptions', val
    end
  end

  attr :AlignedLoads, type: :bool do
    title 'Force Aligned Loads'
    note 'Always issue "aligned" vector load and store instructions. Sets --opt=force-aligned-memory'
    on_set do |val|
      vcprop 'ISPC|AlignedLoads', val
    end
  end

  attr :Architecture, type: :choice do
    title 'Target Architecture'
    note 'Select target architecture.'
    items ['x86', 'x64', 'arm', 'aarch64', 'wasm32']
    on_set do |val|
      vcprop 'ISPC|Architecture', val
    end
  end

  attr :Assertions, type: :bool do
    title 'Disable Assertions'
    note 'Remove assertion statements from final code. Sets --opt=disable-assertions'
    on_set do |val|
      vcprop 'ISPC|Assertions', val
    end
  end

  attr :CPU, type: :choice do
    title 'Target CPU'
    note 'Select CPU targeting.'
    items ['ps4', 'xb1', 'atom', 'core2', 'corei7', 'corei7-avx', 'core-avx-i', 'core-avx2', 'broadwell', 'skx', 'knl', 'slm', 'icl', 'arm-cortex-a15', 'arm-cortex-a9', 'arm-cortex-a35', 'arm-cortex-a53', 'arm-cortex-a57']
    on_set do |val|
      vcprop 'ISPC|CPU', val
    end
  end

  attr :DisableFMA, type: :bool do
    title 'Disable FMA'
    note 'Disable "fused multiply-add" instructions (on targets that support them). Sets --opt=disable-fma'
    on_set do |val|
      vcprop 'ISPC|DisableFMA', val
    end
  end

  attr :DisableLoopUnroll, type: :bool do
    title 'Disable Loop Unroll'
    note 'Disable loop unrolling. Sets --opt=disable-loop-unroll'
    on_set do |val|
      vcprop 'ISPC|DisableLoopUnroll', val
    end
  end

  attr :EnableVectorcall, type: :bool do
    title 'Enable vectorcall'
    note 'Enable/disable vectorcall calling convention on Windows (x64 only). Sets --vectorcall'
    on_set do |val|
      vcprop 'ISPC|EnableVectorcall', val
    end
  end

  attr :FastMath, type: :bool do
    title 'Fast Math'
    note 'Perform non-IEEE-compliant optimizations of numeric expressions. Sets --opt=fast-math'
    on_set do |val|
      vcprop 'ISPC|FastMath', val
    end
  end

  attr :ForceAligned, type: :int do
    title 'Force Memory Alignment'
    note 'Force alignment in memory allocations routine. Sets --force-alignment=[value]'
    on_set do |val|
      vcprop 'ISPC|ForceAligned', val
    end
  end

  attr :GenerateDebugInformation, type: :bool do
    title 'Generate Debug Information'
    note 'Generates Debug Information. (-g). Sets -g'
    on_set do |val|
      vcprop 'ISPC|GenerateDebugInformation', val
    end
  end

  attr :HeaderFile, type: :string do
    title 'Header File Name'
    note 'Interface Header File. Sets -h "[value]"'
    on_set do |val|
      vcprop 'ISPC|HeaderFile', val
    end
  end

  attr_array :IncludePaths, type: :string do
    title 'Include Paths'
    note 'Sets path for include files. Sets -I "[value]"'
    on_set do |val|
      vcprop 'ISPC|IncludePaths', val
    end
  end

  attr :MathLibrary, type: :choice do
    title 'Math Library'
    note 'Select Math Library.'
    items ['default', 'fast', 'svml', 'system']
    on_set do |val|
      vcprop 'ISPC|MathLibrary', val
    end
  end

  attr :NoWarnings, type: :bool do
    title 'Disable Warnings'
    note 'Sets --woff'
    on_set do |val|
      vcprop 'ISPC|NoWarnings', val
    end
  end

  attr :OS, type: :choice do
    title 'Target Operating System'
    note 'Select target operating system.'
    items ['windows', 'ps4', 'linux', 'custom_linux', 'freebsd', 'macos', 'android', 'web']
    on_set do |val|
      vcprop 'ISPC|OS', val
    end
  end

  attr :ObjectFileName, type: :string do
    title 'Object File Name'
    note 'Specifies the name of the output object file. Sets -o "[value]"'
    on_set do |val|
      vcprop 'ISPC|ObjectFileName', val
    end
  end

  attr :Opt, type: :choice do
    title 'Optimization Level'
    items ['disabled', 'size', 'speed', 'maximum']
    on_set do |val|
      vcprop 'ISPC|Opt', val
    end
  end

  attr :PIC, type: :bool do
    title 'Position Independent Code'
    note 'Generate Position Independent Code. Sets --pic'
    on_set do |val|
      vcprop 'ISPC|PIC', val
    end
  end

  attr_array :PreprocessorDefinitions, type: :string do
    title 'Preprocessor Definitions'
    note 'Defines a text macro with the given name. Sets -D"[value]"'
    on_set do |val|
      vcprop 'ISPC|PreprocessorDefinitions', val
    end
  end

  attr :TargetISA, type: :choice do
    title 'Target ISA'
    note 'Select Target ISA.'
    items ['unspecified', 'host', 'sse2-i32x4', 'sse2-i32x8', 'sse4-i32x4', 'sse4-i32x8', 'sse4-i16x8', 'sse4-i8x16', 'avx1-i32x4', 'avx1-i32x8', 'avx1-i32x16', 'avx1-i64x4', 'avx2-i8x32', 'avx2-i16x16', 'avx2-i32x4', 'avx2-i32x8', 'avx2-i32x16', 'avx2-i64x4', 'avx512skx-i8x64', 'avx512skx-i16x32', 'avx512knl-i32x16', 'avx512skx-i32x16', 'avx512skx-i32x8', 'neon-i8x16', 'neon-i16x8', 'neon-i32x4', 'neon-i32x8', 'wasm-i32x4']
    on_set do |val|
      vcprop 'ISPC|TargetISA', val
    end
  end

  attr :WarningLevel, type: :choice do
    title 'Warning Level'
    note 'Sets the warning level.'
    items ['0', '1', '2']
    on_set do |val|
      vcprop 'ISPC|WarningLevel', val
    end
  end

  attr :WarningsAsErrors, type: :bool do
    title 'Treat Warnings as Errors'
    note 'Treat Warnings as Errors. Sets --werror'
    on_set do |val|
      vcprop 'ISPC|WarningsAsErrors', val
    end
  end

end

open_globals do
  vcfiletype '.ispc', :ISPC
end

open_shared :vs_host_common do
  cpp_src_ext ['.ispc', '.isph']
end

open_type :cpp_config do
  attr :ispc, type: :compound, jaba_type: :ispc_rule do
    title 'ispc custom build tool'
  end
end

